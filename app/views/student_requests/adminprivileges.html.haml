- unless session[:uin].nil?
  = render 'layouts/login'
%h1 
  Add New Admin
  .form_new_request
  = form_tag student_requests_addadmin_path, :id => 'new_request' do
    %table{:border => "0"}
      %tr
        %td
          = label :uin, 'UIN of new Admin'
        %td 
          = text_field :admin_request, 'uin', class: 'input-field-admin', :required => true
      %tr
        %td
          = label :name, 'Name of new Admin'
        %td
          = text_field :admin_request, 'name', class: 'input-field-admin', :required => true
      %tr
        %td
          = label :uin, 'Password of new Admin'
        %td
          = text_field :admin_request, 'password', class: 'input-field-admin', :required => true
    = submit_tag 'Comfirm'
  %br
  Add new Student to system
  .form_new_request
  = form_tag student_requests_add_student_path, :id => 'new_request' do
    %table{:border => "0"}
      %tr
        %td
          = label :session, :name, 'full name of student:'
        %td
          = text_field(:session, :name, class: 'input-field')
      %tr
        %td
          = label :session, :uin, 'UIN of Student:'
        %td
          = text_field(:session, :uin, class: 'input-field', :pattern => "[0-9]{9}", :oninvalid => "this.setCustomValidity('Invalid UIN')", :oninput => "this.setCustomValidity('')")
      %tr
        %td
          = label :session, :uin2, 're-enter UIN of student:'
        %td
          = text_field(:session, :uin2, class: 'input-field', :pattern => "[0-9]{9}", :oninvalid => "this.setCustomValidity('Invalid UIN')", :oninput => "this.setCustomValidity('')")
      %tr
        %td
          = label :session, :email, 'email of student:(Please enter the tamu email)'
        %td
          = text_field(:session, :email, class: 'input-field', :pattern => "[a-z0-9._-]{1,}@tamu\.edu", :oninvalid => "this.setCustomValidity('Not TAMU Email Address')", :oninput => "this.setCustomValidity('')")
      %tr
        %td
          = label :session, :major, 'Major of student:'
        %td
          = select :session, 'major', @majorList, :required => true         
      %tr
        %td
          = label :session, :classification, 'Classification of student (U1,U3,G7,G8,etc):'
        %td
          = select :session, 'classification', @classificationList, :required => true
      %tr
        %td
          = label :session, :password, 'the initial password:'
        %td
          = text_field(:session, :password, class: 'input-field', value: '123456')
    = submit_tag 'Comfirm'
    
  %br
  Add new Force Request to system 
  .form_new_request
  = form_tag student_requests_add_force_request_path, :id => 'new_request' do
    %table{:border => "0"}
      %tr
        %td
          = label :admin_request, :uin, 'UIN of student*'
        %td 
          = text_field :admin_request, 'uin', class: 'input-field-admin', :required => true, :pattern => "[0-9]{9}", :oninvalid => "this.setCustomValidity('Invalid UIN')", :oninput => "this.setCustomValidity('')"
      %tr
        %td   
          = label :student_request, :expected_graduation, 'Expected Graduation*'
        %td 
          = select :student_request, 'expected_graduation', @YearSemester
      %tr
        %td   
          = label :student_request, :request_semester, 'Request Semester*'
        %td  
          = select :student_request, 'request_semester', @requestSemester, :required => true
      %tr
        %td   
          = label :student_request, :course_id, 'Course Id*'
        %td  
          = text_field :student_request, 'course_id', class: 'input-field', :required => true
      %tr
        %td   
          = label :student_request, :section_id, 'Section Id*'
        %td  
          = text_field :student_request, 'section_id', class: 'input-field', :required => true
      %tr
        %td   
          = label :student_request, :notes, 'Notes '
        %td  
          = text_area :student_request, 'notes', class: 'notes'
    = submit_tag 'Comfirm'
    
  %br
  Archive All Force Request Data to Archival Database
  = form_tag('/student_requests/deleteall', method: "delete") do
    = submit_tag 'Archive All Data', :data => { confirm: 'Are you sure?', disable_with: 'loading...' }
  = form_tag('/student_requests/adminview', method: :get) do
    = submit_tag 'Cancel'